{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maste\\\\OneDrive\\\\Desktop\\\\IIT Madras\\\\Avishkar\\\\GUI\\\\MQTT trial 3\\\\backend\\\\src\\\\ServerReceive.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nlet mqtt = require(\"mqtt\");\n// let options = {\n//     clientId: 'mosquitto_test',\n//     username: 'mosquitto_test',\n//     password: 'mosquitto_test',\n//     port: 9001\n// }\n// let client = mqtt.connect('ws://127.0.0.1:9001', options);\nlet client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\nfunction ServerReceive() {\n  const [message, setMessage] = useState(\"\");\n  client.on('connect', function () {\n    console.log('Connected');\n    client.subscribe('topic1', function () {\n      client.on('message', function (topic, message, packet) {\n        setMessage(message.toString());\n        console.log('Received \"' + message + '\" on \"' + topic + '\"');\n      });\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Message received: \", message));\n}\nexport default ServerReceive;","map":{"version":3,"names":["React","useState","mqtt","require","client","connect","ServerReceive","message","setMessage","on","console","log","subscribe","topic","packet","toString"],"sources":["C:/Users/maste/OneDrive/Desktop/IIT Madras/Avishkar/GUI/MQTT trial 3/backend/src/ServerReceive.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\"\r\nlet mqtt = require(\"mqtt\");\r\n// let options = {\r\n//     clientId: 'mosquitto_test',\r\n//     username: 'mosquitto_test',\r\n//     password: 'mosquitto_test',\r\n//     port: 9001\r\n// }\r\n// let client = mqtt.connect('ws://127.0.0.1:9001', options);\r\nlet client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\r\n\r\nfunction ServerReceive(){\r\n    const [message, setMessage] = useState(\"\");\r\n    client.on('connect', function(){\r\n        console.log('Connected');\r\n        client.subscribe('topic1', function(){\r\n            client.on('message', function(topic, message, packet){\r\n                setMessage(message.toString());\r\n                console.log('Received \"'+message+'\" on \"'+topic+'\"');\r\n            });\r\n        });\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <p>Message received: {message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerReceive;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACG,OAAO,CAAC,gCAAgC,CAAC;AAE3D,SAASC,aAAa,GAAE;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1CG,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,YAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBP,MAAM,CAACQ,SAAS,CAAC,QAAQ,EAAE,YAAU;MACjCR,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,UAASI,KAAK,EAAEN,OAAO,EAAEO,MAAM,EAAC;QACjDN,UAAU,CAACD,OAAO,CAACQ,QAAQ,EAAE,CAAC;QAC9BL,OAAO,CAACC,GAAG,CAAC,YAAY,GAACJ,OAAO,GAAC,QAAQ,GAACM,KAAK,GAAC,GAAG,CAAC;MACxD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAAsBN,OAAO,CAAK,CAChC;AAEd;AAEA,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}