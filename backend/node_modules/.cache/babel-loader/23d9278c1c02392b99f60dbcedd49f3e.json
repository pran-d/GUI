{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maste\\\\OneDrive\\\\Desktop\\\\IIT Madras\\\\Avishkar\\\\GUI\\\\MQTT trial 3\\\\backend\\\\src\\\\ServerReceive.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nlet mqtt = require(\"mqtt\");\nlet options = {\n  clientId: 'mosquitto_test',\n  username: 'mosquitto_test',\n  password: 'mosquitto_test',\n  port: 9001\n};\nlet client = mqtt.connect('ws://127.0.0.1', options);\nconst [message, setMessage] = useState(\"\");\nfunction ServerReceive() {\n  client.on('connect', function () {\n    console.log('Connected');\n    client.subscribe('topic1', function () {\n      client.on('message', function (topic, message, packet) {\n        setMessage(message.toString());\n        console.log('Received \"' + message + '\" on \"' + topic + '\"');\n      });\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Message received: \", message));\n}\nexport default ServerReceive;","map":{"version":3,"names":["React","useState","mqtt","require","options","clientId","username","password","port","client","connect","message","setMessage","ServerReceive","on","console","log","subscribe","topic","packet","toString"],"sources":["C:/Users/maste/OneDrive/Desktop/IIT Madras/Avishkar/GUI/MQTT trial 3/backend/src/ServerReceive.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\"\r\nlet mqtt = require(\"mqtt\");\r\nlet options = {\r\n    clientId: 'mosquitto_test',\r\n    username: 'mosquitto_test',\r\n    password: 'mosquitto_test',\r\n    port: 9001\r\n}\r\nlet client = mqtt.connect('ws://127.0.0.1', options);\r\n\r\nconst [message, setMessage] = useState(\"\");\r\n\r\nfunction ServerReceive(){\r\n    client.on('connect', function(){\r\n        console.log('Connected');\r\n        client.subscribe('topic1', function(){\r\n            client.on('message', function(topic, message, packet){\r\n                setMessage(message.toString());\r\n                console.log('Received \"'+message+'\" on \"'+topic+'\"');\r\n            });\r\n        });\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <p>Message received: {message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerReceive;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,OAAO,GAAG;EACVC,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAE,gBAAgB;EAC1BC,QAAQ,EAAE,gBAAgB;EAC1BC,IAAI,EAAE;AACV,CAAC;AACD,IAAIC,MAAM,GAAGP,IAAI,CAACQ,OAAO,CAAC,gBAAgB,EAAEN,OAAO,CAAC;AAEpD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;AAE1C,SAASY,aAAa,GAAE;EACpBJ,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,YAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBP,MAAM,CAACQ,SAAS,CAAC,QAAQ,EAAE,YAAU;MACjCR,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,UAASI,KAAK,EAAEP,OAAO,EAAEQ,MAAM,EAAC;QACjDP,UAAU,CAACD,OAAO,CAACS,QAAQ,EAAE,CAAC;QAC9BL,OAAO,CAACC,GAAG,CAAC,YAAY,GAACL,OAAO,GAAC,QAAQ,GAACO,KAAK,GAAC,GAAG,CAAC;MACxD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBAAsBP,OAAO,CAAK,CAChC;AAEd;AAEA,eAAeE,aAAa"},"metadata":{},"sourceType":"module"}