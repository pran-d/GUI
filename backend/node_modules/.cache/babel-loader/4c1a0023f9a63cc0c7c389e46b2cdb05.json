{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maste\\\\OneDrive\\\\Desktop\\\\IIT Madras\\\\Avishkar\\\\GUI\\\\MQTT trial 3\\\\backend\\\\src\\\\ServerSend.js\";\nlet mqtt = require(\"mqtt\");\nimport { useState } from \"react\";\n// let options = {\n//     port: 9001,\n// };\n// let client = mqtt.connect('mqtt://127.0.0.1', options);\n\nfunction ServerSend() {\n  const [topic, setTopic] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const sendMessage = event => {\n    let client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\n    //publish a message to a topic\n    client.on('connect', function () {\n      console.log('Connected');\n      client.subscribe(topic, function (err) {\n        if (!err) {\n          client.publish(topic, message, function () {\n            console.log(\"Message pushed\");\n          });\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Topic\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: topic,\n    onChange: e => setTopic(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Message\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }));\n}\nexport { ServerSend };","map":{"version":3,"names":["mqtt","require","useState","ServerSend","topic","setTopic","message","setMessage","sendMessage","event","client","connect","on","console","log","subscribe","err","publish","e","target","value"],"sources":["C:/Users/maste/OneDrive/Desktop/IIT Madras/Avishkar/GUI/MQTT trial 3/backend/src/ServerSend.js"],"sourcesContent":["let mqtt = require(\"mqtt\")\r\nimport { useState } from \"react\";\r\n// let options = {\r\n//     port: 9001,\r\n// };\r\n// let client = mqtt.connect('mqtt://127.0.0.1', options);\r\n\r\nfunction ServerSend(){\r\n    const [topic, setTopic] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const sendMessage=(event)=>{\r\n        let client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\r\n        //publish a message to a topic\r\n        client.on('connect', function(){\r\n            console.log('Connected');\r\n            client.subscribe(topic, function(err){\r\n                if(!err){\r\n                    client.publish(topic, message, function(){\r\n                        console.log(\"Message pushed\");\r\n                    });\r\n                }\r\n            })\r\n        })\r\n    }\r\n    return(\r\n        <form onSubmit={sendMessage}>\r\n            <label>Topic\r\n                <input type=\"text\" value={topic} onChange={(e)=>setTopic(e.target.value)}/>\r\n            </label>\r\n            <label>Message\r\n                <input type=\"text\" value={message} onChange={(e)=>setMessage(e.target.value)}/>\r\n            </label>\r\n            <input type=\"submit\" />\r\n      </form>\r\n    )\r\n}\r\n\r\nexport {ServerSend};"],"mappings":";AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,SAASC,QAAQ,QAAQ,OAAO;AAChC;AACA;AACA;AACA;;AAEA,SAASC,UAAU,GAAE;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMM,WAAW,GAAEC,KAAK,IAAG;IACvB,IAAIC,MAAM,GAAGV,IAAI,CAACW,OAAO,CAAC,gCAAgC,CAAC;IAC3D;IACAD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,YAAU;MAC3BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBJ,MAAM,CAACK,SAAS,CAACX,KAAK,EAAE,UAASY,GAAG,EAAC;QACjC,IAAG,CAACA,GAAG,EAAC;UACJN,MAAM,CAACO,OAAO,CAACb,KAAK,EAAEE,OAAO,EAAE,YAAU;YACrCO,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UACjC,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACD,oBACI;IAAM,QAAQ,EAAEN,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,yBACI;IAAO,IAAI,EAAC,MAAM;IAAC,KAAK,EAAEJ,KAAM;IAAC,QAAQ,EAAGc,CAAC,IAAGb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CACvE,eACR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2BACI;IAAO,IAAI,EAAC,MAAM;IAAC,KAAK,EAAEd,OAAQ;IAAC,QAAQ,EAAGY,CAAC,IAAGX,UAAU,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAC3E,eACR;IAAO,IAAI,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACtB;AAEb;AAEA,SAAQjB,UAAU"},"metadata":{},"sourceType":"module"}