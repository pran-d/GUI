{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maste\\\\OneDrive\\\\Desktop\\\\IIT Madras\\\\Avishkar\\\\GUI\\\\MQTT trial 3\\\\backend\\\\src\\\\ServerReceive.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nlet mqtt = require(\"mqtt\");\n// let options = {\n//     clientId: 'mosquitto_test',\n//     username: 'mosquitto_test',\n//     password: 'mosquitto_test',\n//     port: 9001\n// }\n// let client = mqtt.connect('ws://127.0.0.1:9001', options);\nlet client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\nfunction ServerReceive() {\n  const [message1, setMessage1] = useState(\"\");\n  const [message2, setMessage2] = useState(\"\");\n  client.on('connect', function () {\n    console.log('Connected');\n    client.subscribe('topic1', function () {\n      client.on('message', function (topic, message, packet) {\n        if (topic === 'topic1') {\n          setMessage1(message.toString());\n          console.log('Received \"' + message + '\" on \"' + topic + '\"');\n        }\n      });\n    });\n    client.subscribe('topic2', function () {\n      client.on('message', function (topic, message, packet) {\n        if (topic === 'topic2') {\n          setMessage2(message.toString());\n          console.log('Received \"' + message + '\" on \"' + topic + '\"');\n        }\n      });\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Message received on topic1: \", message1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Message received on topic2: \", message2));\n}\nexport { ServerReceive };","map":{"version":3,"names":["React","useState","mqtt","require","client","connect","ServerReceive","message1","setMessage1","message2","setMessage2","on","console","log","subscribe","topic","message","packet","toString"],"sources":["C:/Users/maste/OneDrive/Desktop/IIT Madras/Avishkar/GUI/MQTT trial 3/backend/src/ServerReceive.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\"\r\nlet mqtt = require(\"mqtt\");\r\n// let options = {\r\n//     clientId: 'mosquitto_test',\r\n//     username: 'mosquitto_test',\r\n//     password: 'mosquitto_test',\r\n//     port: 9001\r\n// }\r\n// let client = mqtt.connect('ws://127.0.0.1:9001', options);\r\nlet client = mqtt.connect('wss://broker.emqx.io:8084/mqtt');\r\n\r\nfunction ServerReceive(){\r\n    const [message1, setMessage1] = useState(\"\");\r\n    const [message2, setMessage2] = useState(\"\");\r\n    client.on('connect', function(){\r\n        console.log('Connected');\r\n        client.subscribe('topic1', function(){\r\n            client.on('message', function(topic, message, packet){\r\n                if(topic==='topic1'){\r\n                    setMessage1(message.toString());\r\n                    console.log('Received \"'+message+'\" on \"'+topic+'\"');\r\n                }\r\n            });\r\n        });\r\n        client.subscribe('topic2', function(){\r\n            client.on('message', function(topic, message, packet){\r\n                if(topic==='topic2'){\r\n                    setMessage2(message.toString());\r\n                    console.log('Received \"'+message+'\" on \"'+topic+'\"');\r\n                }\r\n            });\r\n        });\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <p>Message received on topic1: {message1}</p>\r\n            <p>Message received on topic2: {message2}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {ServerReceive};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,MAAM,GAAGF,IAAI,CAACG,OAAO,CAAC,gCAAgC,CAAC;AAE3D,SAASC,aAAa,GAAE;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5CG,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,YAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBT,MAAM,CAACU,SAAS,CAAC,QAAQ,EAAE,YAAU;MACjCV,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,UAASI,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAC;QACjD,IAAGF,KAAK,KAAG,QAAQ,EAAC;UAChBP,WAAW,CAACQ,OAAO,CAACE,QAAQ,EAAE,CAAC;UAC/BN,OAAO,CAACC,GAAG,CAAC,YAAY,GAACG,OAAO,GAAC,QAAQ,GAACD,KAAK,GAAC,GAAG,CAAC;QACxD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IACFX,MAAM,CAACU,SAAS,CAAC,QAAQ,EAAE,YAAU;MACjCV,MAAM,CAACO,EAAE,CAAC,SAAS,EAAE,UAASI,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAC;QACjD,IAAGF,KAAK,KAAG,QAAQ,EAAC;UAChBL,WAAW,CAACM,OAAO,CAACE,QAAQ,EAAE,CAAC;UAC/BN,OAAO,CAACC,GAAG,CAAC,YAAY,GAACG,OAAO,GAAC,QAAQ,GAACD,KAAK,GAAC,GAAG,CAAC;QACxD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mCAAgCR,QAAQ,CAAK,eAC7C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mCAAgCE,QAAQ,CAAK,CAC3C;AAEd;AAEA,SAAQH,aAAa"},"metadata":{},"sourceType":"module"}